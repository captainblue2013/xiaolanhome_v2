{
  "id": 315,
  "title": "趣闻 - 过去一周，程序员都在写什么语言？",
  "keywords": [
    "javascript",
    "node"
  ],
  "content": "<p>一直以来我在使用一个叫<strong>wakatime</strong>的工具来记录每天的编码情况。</p>\n\n<p>比如：\n<img alt=\"daily_waka.png\" src=\"http://log.fyscu.com/usr/uploads/2018/03/637394479.png\"/></p>\n\n<p>想要了解<strong>wakatime</strong>的， 自己去<a href=\"https://wakatime.com\">https://wakatime.com</a>了解一下。</p>\n\n<p>除了这个以外，<strong>wakatime</strong>还提供一个公开的排行榜，展示了<strong>最近七天</strong>用户的编码排名情况。</p>\n\n<p><img alt=\"leader.png\" src=\"http://log.fyscu.com/usr/uploads/2018/03/1817434637.png\"/></p>\n\n<h3>于是机会来了。</h3>\n\n<ul><li>把这个排名的数据抓取下来，只要前40页</li><li>把每一个用户使用的语言列表、每个语言的时长记录统计起来</li><li>按语言归类， 看看哪个语言最近7天的使用时间最多。</li></ul>\n\n<h3>第一步，数据爬下来，目标40页</h3>\n\n<p>我当然是不希望抓页面的，这样太没趣，更重要的是</p>\n\n<p><strong>人家有提供接口！！！</strong></p>\n\n<blockquote><p>https://wakatime.com/api/v1/leaders?page=1</p></blockquote>\n\n<p>这下事情就简单多了，代码如下：</p>\n\n<pre><code>&#39;use strict&#39;;\nconst request = require(&#39;request-agent&#39;).init();\nconst fs = require(&#39;fs&#39;);\n\n(async () =&gt; {\n  let data = {};\n  for (let i = 0; i &lt; 40; i++) {\n    data = await request\n      .method(&#39;get&#39;)\n      .url(`https://wakatime.com/api/v1/leaders?page=${i + 1}`)\n      .send();\n    fs.writeFileSync(`./waka_stat/${i + 1}.json`, data.body);\n  }\n})().then((v) =&gt; {\n  console.log(v); process.exit(0);\n}).catch((e) =&gt; {\n  console.log(e);\n});</code></pre>\n\n<h3>第二步，统计</h3>\n\n<p>你可能要问， 为什么不一遍请求接口一遍统计呢？</p>\n\n<p>原因是这个接口速度有点蛋疼（翻墙好点）， 先把数据拉下来， 这样我统计的部分调试也方便。</p>\n\n<p>贴代码：</p>\n\n<pre><code>&#39;use strict&#39;;\nconst fs = require(&#39;fs&#39;);\nlet result = {};\n\nfor (let i = 1; i &lt;= 40; i++) {\n  let data = require(`./${i}.json`).data;\n  let len = data.length;\n  for (let k = 0; k &lt; len; k++) {\n    let languages = data[k].running_total.languages;\n    for (let index in languages) {\n      result[languages[index].name] = result[languages[index].name] || 0;\n      result[languages[index].name] += languages[index].total_seconds;\n    }\n  }\n}\n\nlet unsort = [];\nfor (let k in result) {\n  unsort.push({\n    name: k,\n    seconds: Number.parseInt(result[k] / 3600),\n  });\n}\nunsort.sort((a, b) =&gt; {\n  if (a.seconds &gt; b.seconds) return -1;\n  return 1;\n})\nfs.writeFileSync(&#39;./waka_stat/result.json&#39;, JSON.stringify(unsort, null, 2));</code></pre>\n\n<h3>结果</h3>\n\n<p>贴一部分：\n<img alt=\"WordArt.png\" src=\"http://log.fyscu.com/usr/uploads/2018/03/748102548.png\"/></p>\n\n<pre><code>[\n  {\n    &quot;name&quot;: &quot;JavaScript&quot;,\n    &quot;hours&quot;: 15112\n  },\n  {\n    &quot;name&quot;: &quot;PHP&quot;,\n    &quot;hours&quot;: 9366\n  },\n  {\n    &quot;name&quot;: &quot;Java&quot;,\n    &quot;hours&quot;: 4164\n  },\n  {\n    &quot;name&quot;: &quot;TypeScript&quot;,\n    &quot;hours&quot;: 3262\n  },\n  {\n    &quot;name&quot;: &quot;Python&quot;,\n    &quot;seconds&quot;: 3119\n  },\n  {\n    &quot;name&quot;: &quot;HTML&quot;,\n    &quot;hours&quot;: 3054\n  },\n  {\n    &quot;name&quot;: &quot;C#&quot;,\n    &quot;hours&quot;: 2662\n  },\n  {\n    &quot;name&quot;: &quot;Ruby&quot;,\n    &quot;hours&quot;: 1981\n  },\n  {\n    &quot;name&quot;: &quot;Vue.js&quot;,\n    &quot;hours&quot;: 1698\n  }...</code></pre>",
  "createdAt": 1520353646,
  "modified": 1520353646
}