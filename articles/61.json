{
  "id": "61",
  "title": "软件设计七大原则（二）：里氏代换原则",
  "keywords": [
    "设计模式"
  ],
  "content": "<pre><code>如果每一个类型为T1的对象o1,都有类型为T2的对象o2,使得以T1定义的所有程序P在所有的对象o1都代换称o2时,程序P的行为没有变化,那么类型T2是类型T1的子类型.</code></pre>\n\n<h2>解读：</h2>\n\n<pre><code>公孙龙曰：白马非马。\n就是违法这个原则的经典例子。正确的应该是 白马是马，马非白马。\n\n用在软件设计中的含义就是，子类要全部实现基类的属性和方法，是全部。\n换言之，基类能做到的东西，子类必须全部做到，\n任何使用基类的地方，替换成其任意一个子类，都能正常运作。\n\n就好比，“蒋航”这个实体，具备noob的技能；\n那么“管理员蒋航”也必须实现noob技能，\n在“蒋航”施展noob技能的地方，换了“管理员蒋航”，通用生效，\n重要的事，我们根本擦觉不了这种替换。</code></pre>\n\n<hr/>\n\n<p>未完待续，感谢蒋航友情演出。</p>",
  "createdAt": 1410260640,
  "modified": 1429899786
}